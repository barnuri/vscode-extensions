{
    "dockerfile-front": {
        "prefix": "dockerfile-front",
        "body": [
            "FROM node as builder   ",
            "WORKDIR /app   ",
            "COPY package.json .   ",
            "COPY package-lock.json .    ",
            "RUN npm i    ",
            "COPY . .   ",
            "ARG NODE_ENV   ",
            "ENV NODE_ENV \\$NODE_ENV   ",
            "RUN npm run build   ",
            "RUN mkdir -p /app/dist",
            "RUN mkdir -p /app/build",
            "    ",
            "FROM nginx:alpine   ",
            "ARG NODE_ENV   ",
            "ENV NODE_ENV \\$NODE_ENV   ",
            "RUN echo \\$'                                          \\ ",
            "server {                                             \\ ",
            "    listen 3001;                                       \\ ",
            "    server_name _;                                   \\ ",
            "    root /usr/share/nginx/html;                      \\ ",
            "    index index.html;                                \\ ",
            "    location / {                                     \\ ",
            "        try_files \\$uri \\$1 \\$uri/ /index.html =404;    \\ ",
            "    }                                                \\ ",
            "}' > /etc/nginx/conf.d/default.conf   ",
            "COPY --from=builder /app/build  /usr/share/nginx/html",
            "COPY --from=builder /app/dist /usr/share/nginx/html",
            "EXPOSE 3001   ",
            "CMD [\"nginx\", \"-g\", \"daemon off;\"]   ",
            ""
        ],
        "description": "dockerfile-front"
    },
    "dockerfile-nodejs": {
        "prefix": "dockerfile-nodejs",
        "body": [
            "FROM node as builder",
            " ",
            "RUN mkdir -p /app/",
            "WORKDIR /app/",
            "COPY package.json .",
            "COPY package-lock.json .",
            "RUN npm i",
            "COPY . .",
            "ARG NODE_ENV",
            "ENV NODE_ENV \\$NODE_ENV",
            "RUN npm run build",
            " ",
            "FROM node:alpine",
            "ARG NODE_ENV",
            "ENV NODE_ENV \\$NODE_ENV",
            "RUN mkdir -p /app/",
            "WORKDIR /app/",
            "COPY --from=builder /app/dist ./dist",
            "COPY --from=builder /app/node_modules ./node_modules",
            "CMD [ \"node\", \"./dist/main.js\"]"
        ],
        "description": "dockerfile-nodejs"
    },
    "dockerfile-dotnetcore": {
        "prefix": "dockerfile-dotnetcore",
        "body": [
            "FROM microsoft/dotnet:2.2-sdk AS build",
            "WORKDIR /src",
            "COPY . .",
            "RUN dotnet restore",
            "RUN dotnet build -c Release ",
            "RUN dotnet test",
            "RUN dotnet publish -c Release -o publish",
            " ",
            "FROM microsoft/dotnet:2.2-aspnetcore-runtime",
            "WORKDIR /publish",
            "ARG ASPNETCORE_ENVIRONMENT",
            "ENV ASPNETCORE_ENVIRONMENT \\$ASPNETCORE_ENVIRONMENT",
            "COPY --from=build /src/PROJECT_NAME_REPLACE/publish .",
            "ENTRYPOINT [\"dotnet\", \"PROJECT_NAME_REPLACE.dll\"]"
        ],
        "description": "dockerfile-dotnetcore"
    }
}
