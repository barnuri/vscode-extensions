{
    "Env Config File": {
        "prefix": "envconf",
        "body": [
            "const defaultValues = {",
            "    port: 3000,",
            "};",
            " ",
            "type configType = typeof defaultValues;",
            " ",
            "const ConfigByEnv: { [name: string]: configType } = {",
            "    development: {",
            "        ...defaultValues,",
            "    },",
            "    integration: {",
            "        ...defaultValues,",
            "    },",
            "    stage: {",
            "        ...defaultValues,",
            "    },",
            "    production: {",
            "        ...defaultValues,",
            "    },",
            "};",
            " ",
            "export const getENV = () => {",
            "    if (process.env.NODE_ENV && Object.keys(ConfigByEnv).indexOf(process.env.NODE_ENV || '') > -1) {",
            "        return process.env.NODE_ENV;",
            "    }",
            "    console.log(`\\u001b[33mprocess.env.NODE_ENV unvalid value set development config, process.env.NODE_ENV = ${process.env.NODE_ENV}\\u001b[0m`);",
            "    return 'development';",
            "};",
            " ",
            "export default ConfigByEnv[getENV()] as typeof defaultValues;"
        ],
        "description": "Env Config File"
    },
    "colorsfile": {
        "prefix": "colorsfile",
        "body": [
            "interface String { ",
            "    black(): string; ",
            "    red(): string; ",
            "    green(): string; ",
            "    yellow(): string; ",
            "    blue(): string; ",
            "    magenta(): string; ",
            "    cyan(): string; ",
            "    white(): string; ",
            "} ",
            " ",
            "const Reset = '\\u001b[0m'; ",
            "const colorWithReset = (color: string, str: string) => color + str + Reset; ",
            " ",
            "String.prototype.black = function(this: string) { ",
            "    return colorWithReset('\\u001b[30m', this); ",
            "}; ",
            "String.prototype.red = function(this: string) { ",
            "    return colorWithReset('\\u001b[31m', this); ",
            "}; ",
            " ",
            "String.prototype.yellow = function(this: string) { ",
            "    return colorWithReset('\\u001b[33m', this); ",
            "}; ",
            " ",
            "String.prototype.green = function(this: string) { ",
            "    return colorWithReset('\\u001b[32m', this); ",
            "}; ",
            "String.prototype.blue = function(this: string) { ",
            "    return colorWithReset('\\u001b[34m', this); ",
            "}; ",
            "String.prototype.magenta = function(this: string) { ",
            "    return colorWithReset('\\u001b[35m', this); ",
            "}; ",
            "String.prototype.cyan = function(this: string) { ",
            "    return colorWithReset('\\u001b[36m', this); ",
            "}; ",
            "String.prototype.white = function(this: string) { ",
            "    return colorWithReset('\\u001b[37m', this); ",
            "};"
        ],
        "description": "Colors File"
    }
}
